"0","library(readr)"
"0","library(dplyr)"
"0","library(ggplot2)"
"0","library(ggpubr)"
"0","library(rstatix)"
"0","library(here)"
"0",""
"0","# 目录"
"0","if (!dir.exists(here(""data"")))  dir.create(here(""data""))"
"0","if (!dir.exists(here(""plots""))) dir.create(here(""plots""))"
"0",""
"0","# ---------- 1) 读取 ----------"
"0","control <- read_csv(here(""data"",""control_group.csv"")) %>% mutate(Group = ""Control"")"
"0","test    <- read_csv(here(""data"",""test_group.csv""))    %>% mutate(Group = ""Test"")"
"0",""
"0","# 小工具：标准化列名（去掉非字母数字、转小写）"
"0","norm <- function(x) gsub(""[^a-z0-9]"", """", tolower(x))"
"0",""
"0","# 在某个数据框里找“最像”的列（按候选关键词匹配）"
"0","match_col <- function(df, candidates) {"
"0","  nms <- names(df)"
"0","  n1  <- norm(nms)"
"0","  cand <- norm(candidates)"
"0","  # 完全匹配优先"
"0","  for (c in cand) {"
"0","    hit <- which(n1 == c)"
"0","    if (length(hit) > 0) return(nms[hit[1]])"
"0","  }"
"0","  # 子串匹配备选"
"0","  for (c in cand) {"
"0","    hit <- which(grepl(c, n1, fixed = TRUE))"
"0","    if (length(hit) > 0) return(nms[hit[1]])"
"0","  }"
"0","  return(NA_character_)"
"0","}"
"0",""
"0","# 为每个数据框分别找需要的列"
"0","find_needed_cols <- function(df) {"
"0","  date_col <- match_col(df, c(""date"",""day""))"
"0","  clicks_col <- match_col(df, c(""# of website clicks"",""website clicks"",""clicks"",""# of clicks""))"
"0","  purch_col  <- match_col(df, c(""# of purchase"",""# of purchases"",""purchase"",""purchases"",""conversions""))"
"0","  list(date=date_col, clicks=clicks_col, purch=purch_col)"
"0","}"
"0",""
"0","c_cols <- find_needed_cols(control)"
"0","t_cols <- find_needed_cols(test)"
"0",""
"0","# 缺列时给出友好报错"
"0","need_stop <- function(cols, which_df){"
"0","  miss <- names(cols)[vapply(cols, function(x) is.na(x) || x=="""", logical(1))]"
"0","  if (length(miss)>0) {"
"0","    stop(sprintf("
"0","      ""%s 缺少必要列：%s\n实际列名为：%s"","
"0","      which_df, paste(miss, collapse="", ""),"
"0","      paste(names(get(which_df)), collapse="" | "")"
"0","    ), call. = FALSE)"
"0","  }"
"0","}"
"0","need_stop(c_cols, ""control"")"
"0","need_stop(t_cols, ""test"")"
"0",""
"0","# 安全除法"
"0","safe_div <- function(a,b) ifelse(is.na(b) | b==0, NA_real_, a/b)"
"0",""
"0","# ---------- 2) 计算 Daily CR ----------"
"0","control_daily <- control %>%"
"0","  transmute("
"0","    Date  = .data[[c_cols$date]],"
"0","    Group = ""Control"","
"0","    Clicks = suppressWarnings(as.numeric(.data[[c_cols$clicks]])),"
"0","    Purchase = suppressWarnings(as.numeric(.data[[c_cols$purch]]))"
"0","  ) %>%"
"0","  mutate(CR = safe_div(Purchase, Clicks)) %>%"
"0","  filter(!is.na(CR), is.finite(CR)) %>%"
"0","  select(Date, CR, Group)"
"0",""
"0","test_daily <- test %>%"
"0","  transmute("
"0","    Date  = .data[[t_cols$date]],"
"0","    Group = ""Test"","
"0","    Clicks = suppressWarnings(as.numeric(.data[[t_cols$clicks]])),"
"0","    Purchase = suppressWarnings(as.numeric(.data[[t_cols$purch]]))"
"0","  ) %>%"
"0","  mutate(CR = safe_div(Purchase, Clicks)) %>%"
"0","  filter(!is.na(CR), is.finite(CR)) %>%"
"0","  select(Date, CR, Group)"
"0",""
"0","# ---------- 3) 输出分组 Daily CR ----------"
"0","readr::write_csv(control_daily, here(""data"",""control_daily_cr.csv""))"
"0","readr::write_csv(test_daily,    here(""data"",""test_daily_cr.csv""))"
"0",""
"0","# ---------- 4) 合并 + 诊断 ----------"
"0","dat_raw <- bind_rows(control_daily, test_daily) %>%"
"0","  mutate(Group = factor(Group, levels = c(""Control"",""Test"")))"
"0",""
"0","# 看看每组在过滤前后各有多少有效行"
"0","before_cnt <- dat_raw %>% count(Group, name = ""n_before"")"
"0","after_cnt  <- dat_raw %>%"
"0","  filter(!is.na(CR), is.finite(CR)) %>%"
"0","  count(Group, name = ""n_after"")"
"0",""
"0","diag_tbl <- before_cnt %>%"
"0","  left_join(after_cnt, by = ""Group"") %>%"
"0","  mutate(n_after = ifelse(is.na(n_after), 0L, n_after))"
"0",""
"0","print(diag_tbl)"
